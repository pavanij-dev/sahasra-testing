#!/usr/bin/env node
const fs=require("fs"),path=require("path");function parseArgs(){const e=process.argv.slice(2),t={root:process.cwd(),delete:!1};for(let n=0;n<e.length;n+=1){const s=e[n];"--root"===s?(t.root=e[n+1],n+=1):"--delete"===s&&(t.delete=!0)}return t}function isTextFile(e){return new Set([".php",".html",".htm",".css",".js",".json",".md",".txt"]).has(path.extname(e).toLowerCase())}function isImageFile(e){return new Set([".png",".jpg",".jpeg",".gif",".svg",".webp",".avif"]).has(path.extname(e).toLowerCase())}function walkDir(e,t){const n=[e],s=[];for(;n.length>0;){const e=n.pop();let o;try{o=fs.readdirSync(e,{withFileTypes:!0})}catch(e){continue}for(const r of o){const o=path.join(e,r.name);if(r.isDirectory()){if("node_modules"===r.name||".git"===r.name||"_unused_images"===r.name)continue;n.push(o)}else r.isFile()&&(t&&!t(o)||s.push(o))}}return s}function readFileSafe(e){try{return fs.readFileSync(e,"utf8")}catch(e){return""}}function ensureDirSync(e){fs.existsSync(e)||fs.mkdirSync(e,{recursive:!0})}function main(){const{root:e,delete:t}=parseArgs(),n=path.resolve(e),s=path.join(n,"images");fs.existsSync(s)||process.exit(0);const o=walkDir(n,e=>isTextFile(e)),r=walkDir(s,e=>isImageFile(e)),a=new Map;for(const e of r){const t=path.basename(e).toLowerCase();a.has(t)||a.set(t,[]),a.get(t).push(e)}const i=new Set,c=new Set,l=/[A-Za-z0-9_\-./%]+\.(?:png|jpe?g|gif|svg|webp|avif)/gi;for(const e of o){const t=readFileSafe(e);if(!t)continue;const s=t.match(l)||[];for(let e of s){try{e=decodeURIComponent(e)}catch(e){}const t=e.replace(/\\/g,"/");let s=null;if(t.includes("images/")){let e=t.replace(/^\.{0,2}\//,"");const o=e.indexOf("images/");if(o>=0&&(e=e.slice(o)),s=path.join(n,e),fs.existsSync(s)){i.add(path.resolve(s));continue}}const o=path.basename(t).toLowerCase(),r=a.get(o);r&&1===r.length?i.add(path.resolve(r[0])):r&&r.length>1&&c.add(o)}}const f=new Set(r.map(e=>path.resolve(e))),u=Array.from(i),p=Array.from(f).filter(e=>!i.has(e)),h={root:n,totals:{codeFiles:o.length,imageFiles:r.length,used:u.length,unused:p.length,ambiguousBasenameCount:c.size},ambiguousBasenames:Array.from(c).sort(),usedImages:u.sort(),unusedImages:p.sort()},g=path.join(n,"prune-report.json");if(fs.writeFileSync(g,JSON.stringify(h,null,2),"utf8"),0!==p.length)if(t)for(const e of p)try{fs.unlinkSync(e)}catch(e){}else{const e=path.join(n,"_unused_images");for(const t of p){const s=path.relative(n,t),o=path.join(e,s);ensureDirSync(path.dirname(o));try{fs.renameSync(t,o)}catch(e){try{fs.copyFileSync(t,o),fs.unlinkSync(t)}catch(e){}}}}}main();